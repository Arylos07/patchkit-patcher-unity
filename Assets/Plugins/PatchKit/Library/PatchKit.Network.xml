<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PatchKit.Network</name>
    </assembly>
    <members>
        <member name="T:PatchKit.Network.HttpClient">
            <inheritdoc />
            <summary>
            Implementation of <see cref="T:PatchKit.Network.IHttpClient" /> that uses .NET Framework classes.
            </summary>
        </member>
        <member name="M:PatchKit.Network.HttpClient.SendRequest(PatchKit.Network.HttpGetRequest,System.Nullable{PatchKit.Core.Timeout},PatchKit.Core.Cancellation.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:PatchKit.Network.HttpClient.SendRequest(PatchKit.Network.HttpPostRequest,System.Nullable{PatchKit.Core.Timeout},PatchKit.Core.Cancellation.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:PatchKit.Network.BytesRangeExtensions">
            <summary>
            Extensions methods allowing for more declarative approach to byte range operations.
            </summary>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.IsEmpty(PatchKit.Network.BytesRange)">
            <summary>
            Returns true if the Start and End of given range are equal.
            Otherwise returns false.
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.IsFull(PatchKit.Network.BytesRange)">
            <summary>
            Returns true if given range is in form 0:-1.
            Otherwise returns false.
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.ContainIn(PatchKit.Network.BytesRange,PatchKit.Network.BytesRange)">
            <summary>
            Limits one range inside the other, examples:
            0:-1 contained in range 20:30 becomes 20:30.
            0:100 contained in range 50:-1 becomes 50:100
            </summary>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.LocalizeTo(PatchKit.Network.BytesRange,PatchKit.Network.BytesRange)">
            <summary>
            Localizes one range inside another, the resulting range is limited and local to the relative ("parent") range
            If the ranges don't overlap, an empty range will be returned.
            Examples:
            50:95 localized within 10:90 becomes 40:-1
            5:15 localized within 10:90 becomes 0:5
            </summary>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.Overlaps(PatchKit.Network.BytesRange,PatchKit.Network.BytesRange)">
            <summary>
            Returns true if given ranges overlap.
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.Contains(PatchKit.Network.BytesRange,PatchKit.Network.BytesRange)">
            <summary>
            Returns true if the outer range fully contains the inner range.
            </summary>
            <param name="outer"></param>
            <param name="inner"></param>
            <returns></returns>
        </member>
        <member name="M:PatchKit.Network.BytesRangeExtensions.Contains(PatchKit.Network.BytesRange,System.Nullable{System.Int64})">
            <summary>
            Returns true if the given range contains the specified value.
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:PatchKit.Network.HttpGetRequest">
            <summary>
            Describes HTTP GET request.
            </summary>
        </member>
        <member name="M:PatchKit.Network.HttpGetRequest.#ctor(PatchKit.Network.HttpAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:PatchKit.Network.HttpGetRequest"/> struct.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpGetRequest.Address">
            <summary>
            Target request address.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpGetRequest.ValidationError">
            <inheritdoc />
        </member>
        <member name="T:PatchKit.Network.BytesRange">
            <summary>
            Specifies byte range.
            </summary>
        </member>
        <member name="P:PatchKit.Network.BytesRange.Start">
            <summary>
            Starting byte of the range (inclusive).
            </summary>
        </member>
        <member name="P:PatchKit.Network.BytesRange.End">
            <summary>
            Ending byte of the range (inclusive).
            If set to null, range is extended to the end.
            </summary>
        </member>
        <member name="M:PatchKit.Network.BytesRange.#ctor(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of <see cref="T:PatchKit.Network.BytesRange"/> struct.
            </summary>
        </member>
        <member name="M:PatchKit.Network.BytesRange.Empty">
            <summary>
            Returns an empty range 0:0
            </summary>
            <returns></returns>
        </member>
        <member name="P:PatchKit.Network.BytesRange.ValidationError">
            <inheritdoc />
        </member>
        <member name="T:PatchKit.Network.HttpPostRequest">
            <summary>
            Describes HTTP POST request.
            </summary>
        </member>
        <member name="M:PatchKit.Network.HttpPostRequest.#ctor(PatchKit.Network.HttpAddress,PatchKit.Core.Collections.Immutable.ImmutableArray{System.Byte},PatchKit.Network.HttpPostRequestContentType)">
            <summary>
            Initializes a new instance of the <see cref="T:PatchKit.Network.HttpPostRequest"/> struct.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpPostRequest.Address">
            <summary>
            Target request address.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpPostRequest.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpPostRequest.Content">
            <summary>
            Content data.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpPostRequest.ValidationError">
            <inheritdoc />
        </member>
        <member name="T:PatchKit.Network.HttpPostRequestContentType">
            <summary>
            Type of HTTP POST request content.
            </summary>
        </member>
        <member name="F:PatchKit.Network.HttpPostRequestContentType.ApplicationXWWWFormUrlEncoded">
            <summary>
            application/x-www-form-urlencoded
            </summary>
        </member>
        <member name="F:PatchKit.Network.HttpPostRequestContentType.MultipartFormData">
            <summary>
            multipart/form-data
            </summary>
        </member>
        <member name="T:PatchKit.Network.HttpResponse">
            <summary>
            HTTP response.
            </summary>
        </member>
        <member name="M:PatchKit.Network.HttpResponse.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:PatchKit.Network.HttpResponse"/> struct.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpResponse.Body">
            <summary>
            Response body.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpResponse.StatusCode">
            <summary>
            Response status code.
            </summary>
        </member>
        <member name="P:PatchKit.Network.HttpResponse.ValidationError">
            <inheritdoc />
        </member>
        <member name="T:PatchKit.Network.IHttpClient">
            <summary>
            HTTP client with ability to send requests.
            </summary>
        </member>
        <member name="M:PatchKit.Network.IHttpClient.SendRequest(PatchKit.Network.HttpGetRequest,System.Nullable{PatchKit.Core.Timeout},PatchKit.Core.Cancellation.CancellationToken)">
            <summary>
            Sends GET request.
            </summary>
            <param name="request">Request to send.</param>
            <param name="timeout">Timeout. If set to <c>null</c> then timeout is diabled.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Response for sent request.</returns>
        </member>
        <member name="M:PatchKit.Network.IHttpClient.SendRequest(PatchKit.Network.HttpPostRequest,System.Nullable{PatchKit.Core.Timeout},PatchKit.Core.Cancellation.CancellationToken)">
            <summary>
            Sends POST request.
            </summary>
            <param name="request">Request to send.</param>
            <param name="timeout">Timeout. If set to <c>null</c> then timeout is diabled.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Response for sent request.</returns>
        </member>
        <member name="M:PatchKit.Network.IHttpDownloader.Download(PatchKit.Network.HttpAddress,System.Nullable{PatchKit.Network.BytesRange},PatchKit.Network.OnBytesDownloadedHandler,System.Nullable{PatchKit.Core.Timeout},PatchKit.Core.Cancellation.CancellationToken)">
            <summary>
            Downloads data from specified address.
            </summary>
        </member>
    </members>
</doc>
